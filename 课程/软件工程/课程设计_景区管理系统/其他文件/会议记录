会议记录

############################################################

时间 2019年6月24日(第一天)
参加人员:Dai Lei  Duan Yihao  Cui Yuming  Tang Yinghao
主题:选定题目,主体设计,分工
主持/记录:Dai Lei

事项一:确定课程设计的主题
主题:景区管理系统
系统分四个角色,游客,管理员,工作人员,商家.
四个组员,每人选择一个角色并设计相关功能.

事项二:游客可以执行的操作
购票,入场,离场,退票
查看景区信息,线路规划,查看门票信息.

事项三:管理员可以执行的操作
查看景区收入,支出,盈利,交易记录
查看工作人员列表,工资结算
查看商铺信息
改变员工状态,创建员工账号,
为商户租赁商铺

事项四:工作人员可以执行的操作
查看门票信息
售票
签到,签退,请假
为商户创建账号
开园,闭园

事项五:商户可以执行的操作
空白商铺查看
商铺租赁
设备报修

事项六:角色/功能分工
Dai Lei :
	游客可执行操作的设计,实现
	地图设计
	需求分析
Duan Yihao :
	工作人员可执行操作的设计,实现
	四个子系统的整合
	系统前端设计
Cui Yuming :
	商户可执行操作的设计,实现
	算法实现
	流程分析
Tang Yinghao :
	管理员可执行操作的设计,实现
	软件测试
	可行性分析

############################################################

时间 2019年6月25日(第二天)
参加人员:Duan Yihao  Cui Yuming  Tang Yinghao  Dai Lei
主题:数据库表的结构设定
主持/记录:Duan Yihao

事项一:工作进度总结
	前一天,小组共同完成了系统框架的编写和简单的登陆功能.

事项二:明确登陆系统的实现方案
在该系统中,管理员,商户,员工可以(需要)登陆.
每个角色登陆系统后,可以执行的操作不同,对应的界面也不同.
问题:如何确定登陆者的身份.
方案1:
	三种角色的账号信息分别存储在三个表中,
	登陆前选择"员工登陆","管理员登陆"或"商户登陆"
	将选择的参数传入后台,并在对应的数据表中查询,验证登陆是否成功.
	优点:三种角色需要存储的信息不同,分为三个表,可以根据每个角色的逻辑设置数据表的字段,数据库冗余少
	缺点:界面复杂,功能内聚程度较低
方案2:
	所有账号存储在同一个表中,添加一个字段标记账号的身份.
	优点:流程统一,耦合程度高,操作简单
	缺点:需要建立一个字段很多的表,包含三种角色需要的所有字段,或为每个角色的其他字段另建新表,数据库较复杂
讨论结果:选用方案2

事项三:数据库设计(暂定)
	数据库名:VC (Visitor Control)
	表名:
		map(地图)
		shop(商铺表)
		user(登陆表)
		visitor(票务信息表)
		worker(员工表)

############################################################

时间 2019年6月26日(第三天)
参加人员:Cui Yuming  Tang Yinghao  Dai Lei  Duan Yihao
主题:地图寻路功能,员工签到功能方案选择
主持/记录:Cui Yuming

事项一:工作进度总结
后台:
	账号相关(登陆,注册账号,账号身份)
	票务相关(售票,入场,离场,退票)
	资金管理(收支,流水[选择日期])
前端:
	信展示页面
	寻找合适的前端框架
素材:
	地图节点,名称,线路,设施确定

事项二:地图寻路功能的方案选用
功能需求:用户提交两个或多个地点,系统自动规划游览线路
方案1:
	将寻路过程做成游览线路规划,游客输入多个地点,自动规划能够遍历所有地点的最短线路
	优点:贴近实际,功能实用
	缺点:算法复杂,编写代码困难,难以实现
方案2:
	输入起点和终点,生成两点间的最短线路
	优点:实现容易
	缺点:在地图较简单的系统中,实用性不高
讨论结果:选用方案2
为寻路功能新建表:near(地图邻接表)

事项三:员工签到功能细节敲定
员工签到功能,用于存储员工工作时长,记录有效工作天数,是实现工资结算的基础.
方案1:
	提供签到,签退按钮,员工登陆进入后台后可以点击,每点击一次,在数据库中添加一条记录.
	优点:实现简单
	缺点:生成的数据冗余,难以进行整理
方案2:
	在员工表中,添加字段,标记员工是否在工作中.
	如果员工在岗,则只提供签退功能,如果员工不在岗,则只提供签到功能
	优点:实现容易
	缺点:与实际场景不太相符(常规的签到签退功能一般都有时间限制)
方案3:
	检测系统时间,在特定时间内开放"签到","签退"功能.
	如:早上6:00-9:00,中午1:00-4:00可以执行"签到"功能
	中午11:00-1:00,下午4:00-8:00可以执行"签退"功能.
	优点:实现简单,较贴近现实使用场景
	缺点:时间写死在代码中,后期维护成本高,不符合软件工程的理念.
方案4:
	在数据库中新建配置表,存储签到时间段和签退时间段,每次进入签到签退相关页面时先检查该字段以确定可以实现的功能
	优点:自由灵活
	缺点:实现困难,需要使用大量时间去实现,会拖累其他功能的进度
方案5:
	在页面上提供签到和签退按钮.
	每次点击签到时,检测数据库中当天是否有更早的签到记录,如果有,则不进行任何操作,否则记录签到时间
	签退时,检测数据库中当天是否有更早的签退记录,如果有,更新签退时间为当前时间.
	优点:实现容易,可以记录每天的签到时间并且可以保证每天最多留下两条签到数据.
	缺点:无法实现午休功能.
讨论结果:暂时使用方案2,如果其他功能完成早,完善为方案5.

############################################################

时间 2019年6月27日(第四天)
参加人员:Tang Yinghao  Dai Lei  Duan Yihao  Cui Yuming
主题:工作内容重新分配
主持/记录:Tang Yinghao

事项一:工作进度总结
后台:
	员工管理(添加员工,修改员工状态,签到,签退)
	完成商铺租赁功能
	添加新表:
	checkin(员工签到功能)
	rent(商铺租赁)
	bill(账单)
前台:
	完成了网页主体框架
	确定网页的结构
	完成导航栏的制作
	部分已完成的后台功能的前端适配(数据展示)
素材:
	地图绘制完成
	页面展示背景图片选定

事项二:工作内容重新分配
由于四种角色所需要的代码量极为不平衡,考虑实际完成情况,按功能为单位重新分配任务.
	1.票务功能
	2.地图功能
	3.登陆功能
	4.票务操作功能(购票入场出场退票,包括记录账单)
	5.票务查询功能(查看购票时间,入场时间,离场时间,退票时间,包括前端判断,显示)
	6.账号管理,维护
	7.账单管理(收入支出)
	8.公开数据查看,汇总功能(人流量,设备使用次数等)
	9.商铺管理功能
	10.非公开数据查看,汇总功能(收支,流水等)
	11.前端设计
	12.需求分析
	13.功能整合
	14.数据库设计,管理
	15.流程设计
将系统的四个角色简化为两个,员工和管理员,员工的功能只保留签到,签退,售票,票务信息查询(链接到管理员的界面).
其他功能整合到管理员视图,实现统一的管理界面.

事项三:账单管理的代码结构
购票和退票时需要记录现金的收支,这部分代码应该放在调用购票代码的位置(action类),还是实现购票代码的位置(java类).
	购票和退票必然调用记账操作,调用操作放在action类和java类中,运行结果一样.
	从软件工程的角度,购票和记账是两个并列的功能,在其他功能同样会用到记账功能,所以将记账放在java类中不太合适.
讨论结果:在action中调用购票代码,并将返回结果传入记账函数.

############################################################

时间 2019年6月24日(第五天)
参加人员:Dai Lei  Duan Yihao  Cui Yuming  Tang Yinghao
主题:课程设计总结,分析
主持/记录:Dai Lei

事项一:工作进度总结
后台:
	园区管理(客流统计:日流量,园内人数,当月人数,商铺租赁,商铺命名)
	记账功能完善
	信息展示,数据筛选和数据处理
	地图寻路
前端:
	处理后台传递的数据,对不同的情况使用相应处理方式
停止新功能的开发,完善和整合已有功能.
任务规划:进行完整测试,从创建账号到每个具体功能,完整走一遍流程,寻找错误页面,进行错误处理.

事项二:
收支流水查询结果为空的错误处理
	错误原因:流程改变,原计划先传入开始到结束日期,然后查询传入日期范围内的收支流水
	结构改变后,省去了传入日期的流程导致后端查询数据为空.
	功能模块:信息展示
	测试:Dai Lei
	修改:Duan Yihao

事项三:
商铺管理,指定商铺的归属后,商铺的状态没有从闲置变为使用中的错误处理
	错误原因:代码编写错误
	功能模块:商铺管理
	测试:Cui Yuming
	修改:Tang Yinghao